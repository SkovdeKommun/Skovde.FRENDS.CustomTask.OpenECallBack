//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenECallBack
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class AccessDenied
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class ExternalID
    {
        
        private string idField;
        
        private string systemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string System
        {
            get
            {
                return this.systemField;
            }
            set
            {
                this.systemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class FlowInstanceNotFound
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class StatusNotFound
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", ConfigurationName="OpenECallBack.IntegrationCallback")]
    public interface IntegrationCallback
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/confirmDeliveryRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/confirmDeliveryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/confirmDelivery/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/confirmDelivery/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task confirmDeliveryAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, bool delivered, string logMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/deleteInstanceRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/deleteInstanceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/deleteInstance/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/deleteInstance/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task deleteInstanceAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, string logMessage);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/getManagersRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/getManagersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/getManagers/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/getManagers/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<OpenECallBack.getManagersResponse> getManagersAsync(OpenECallBack.getManagersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setManagersRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setManagersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setManagers/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setManagers/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<OpenECallBack.setManagersResponse> setManagersAsync(OpenECallBack.setManagersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addInternalMessageRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addInternalMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addInternalMessage/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addInternalMessage/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="messageID")]
        System.Threading.Tasks.Task<int> addInternalMessageAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, OpenECallBack.IntegrationMessage message, OpenECallBack.Principal principal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addEventRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addEvent/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addEvent/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="eventID")]
        System.Threading.Tasks.Task<int> addEventAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, System.DateTime date, string message, OpenECallBack.Principal principal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addMessageRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addMessage/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/addMessage/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="messageID")]
        System.Threading.Tasks.Task<int> addMessageAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, OpenECallBack.IntegrationMessage message, OpenECallBack.Principal principal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setAttributeRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setAttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setAttribute/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setAttribute/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task setAttributeAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, string name, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setStatusRequest", ReplyAction="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.AccessDenied), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setStatus/Fault/AccessDeniedException", Name="AccessDeniedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.FlowInstanceNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setStatus/Fault/FlowInstanceNotFoundException", Name="FlowInstanceNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(OpenECallBack.StatusNotFound), Action="http://www.oeplatform.org/version/1.0/schemas/integration/callback/IntegrationCal" +
            "lback/setStatus/Fault/StatusNotFoundException", Name="StatusNotFoundFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="eventID")]
        System.Threading.Tasks.Task<int> setStatusAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, int statusID, string statusAlias, OpenECallBack.Principal principal);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class Principal
    {
        
        private string nameField;
        
        private string userIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string userID
        {
            get
            {
                return this.userIDField;
            }
            set
            {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class PrincipalGroup
    {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getManagersRequest", WrapperNamespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", IsWrapped=true)]
    public partial class getManagersRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=0)]
        public int flowInstanceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=1)]
        public OpenECallBack.ExternalID externalID;
        
        public getManagersRequest()
        {
        }
        
        public getManagersRequest(int flowInstanceID, OpenECallBack.ExternalID externalID)
        {
            this.flowInstanceID = flowInstanceID;
            this.externalID = externalID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getManagersResponse", WrapperNamespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", IsWrapped=true)]
    public partial class getManagersResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("managers", IsNullable=true)]
        public OpenECallBack.Principal[] managers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("managerGroups", IsNullable=true)]
        public OpenECallBack.PrincipalGroup[] managerGroups;
        
        public getManagersResponse()
        {
        }
        
        public getManagersResponse(OpenECallBack.Principal[] managers, OpenECallBack.PrincipalGroup[] managerGroups)
        {
            this.managers = managers;
            this.managerGroups = managerGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setManagers", WrapperNamespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", IsWrapped=true)]
    public partial class setManagersRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=0)]
        public int flowInstanceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=1)]
        public OpenECallBack.ExternalID externalID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("managers", IsNullable=true)]
        public OpenECallBack.Principal[] managers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("managerGroups", IsNullable=true)]
        public OpenECallBack.PrincipalGroup[] managerGroups;
        
        public setManagersRequest()
        {
        }
        
        public setManagersRequest(int flowInstanceID, OpenECallBack.ExternalID externalID, OpenECallBack.Principal[] managers, OpenECallBack.PrincipalGroup[] managerGroups)
        {
            this.flowInstanceID = flowInstanceID;
            this.externalID = externalID;
            this.managers = managers;
            this.managerGroups = managerGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setManagersResponse", WrapperNamespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", IsWrapped=true)]
    public partial class setManagersResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback", Order=0)]
        public int setManagersReturn;
        
        public setManagersResponse()
        {
        }
        
        public setManagersResponse(int setManagersReturn)
        {
            this.setManagersReturn = setManagersReturn;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class IntegrationMessage
    {
        
        private System.DateTime addedField;
        
        private Attachment[] attachmentsField;
        
        private string messageField;
        
        private string userIDField;
        
        private bool readReceiptEnabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime added
        {
            get
            {
                return this.addedField;
            }
            set
            {
                this.addedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachments", IsNullable=true, Order=1)]
        public Attachment[] attachments
        {
            get
            {
                return this.attachmentsField;
            }
            set
            {
                this.attachmentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string userID
        {
            get
            {
                return this.userIDField;
            }
            set
            {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool readReceiptEnabled
        {
            get
            {
                return this.readReceiptEnabledField;
            }
            set
            {
                this.readReceiptEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oeplatform.org/version/1.0/schemas/integration/callback")]
    public partial class Attachment
    {
        
        private byte[] encodedDataField;
        
        private string filenameField;
        
        private long sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] encodedData
        {
            get
            {
                return this.encodedDataField;
            }
            set
            {
                this.encodedDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string filename
        {
            get
            {
                return this.filenameField;
            }
            set
            {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IntegrationCallbackChannel : OpenECallBack.IntegrationCallback, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class IntegrationCallbackClient : System.ServiceModel.ClientBase<OpenECallBack.IntegrationCallback>, OpenECallBack.IntegrationCallback
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public IntegrationCallbackClient() : 
                base(IntegrationCallbackClient.GetDefaultBinding(), IntegrationCallbackClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.IntegrationCallbackPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IntegrationCallbackClient(EndpointConfiguration endpointConfiguration) : 
                base(IntegrationCallbackClient.GetBindingForEndpoint(endpointConfiguration), IntegrationCallbackClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IntegrationCallbackClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(IntegrationCallbackClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IntegrationCallbackClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(IntegrationCallbackClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IntegrationCallbackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task confirmDeliveryAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, bool delivered, string logMessage)
        {
            return base.Channel.confirmDeliveryAsync(flowInstanceID, externalID, delivered, logMessage);
        }
        
        public System.Threading.Tasks.Task deleteInstanceAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, string logMessage)
        {
            return base.Channel.deleteInstanceAsync(flowInstanceID, externalID, logMessage);
        }
        
        public System.Threading.Tasks.Task<OpenECallBack.getManagersResponse> getManagersAsync(OpenECallBack.getManagersRequest request)
        {
            return base.Channel.getManagersAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenECallBack.setManagersResponse> OpenECallBack.IntegrationCallback.setManagersAsync(OpenECallBack.setManagersRequest request)
        {
            return base.Channel.setManagersAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenECallBack.setManagersResponse> setManagersAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, OpenECallBack.Principal[] managers, OpenECallBack.PrincipalGroup[] managerGroups)
        {
            OpenECallBack.setManagersRequest inValue = new OpenECallBack.setManagersRequest();
            inValue.flowInstanceID = flowInstanceID;
            inValue.externalID = externalID;
            inValue.managers = managers;
            inValue.managerGroups = managerGroups;
            return ((OpenECallBack.IntegrationCallback)(this)).setManagersAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<int> addInternalMessageAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, OpenECallBack.IntegrationMessage message, OpenECallBack.Principal principal)
        {
            return base.Channel.addInternalMessageAsync(flowInstanceID, externalID, message, principal);
        }
        
        public System.Threading.Tasks.Task<int> addEventAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, System.DateTime date, string message, OpenECallBack.Principal principal)
        {
            return base.Channel.addEventAsync(flowInstanceID, externalID, date, message, principal);
        }
        
        public System.Threading.Tasks.Task<int> addMessageAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, OpenECallBack.IntegrationMessage message, OpenECallBack.Principal principal)
        {
            return base.Channel.addMessageAsync(flowInstanceID, externalID, message, principal);
        }
        
        public System.Threading.Tasks.Task setAttributeAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, string name, string value)
        {
            return base.Channel.setAttributeAsync(flowInstanceID, externalID, name, value);
        }
        
        public System.Threading.Tasks.Task<int> setStatusAsync(int flowInstanceID, OpenECallBack.ExternalID externalID, int statusID, string statusAlias, OpenECallBack.Principal principal)
        {
            return base.Channel.setStatusAsync(flowInstanceID, externalID, statusID, statusAlias, principal);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IntegrationCallbackPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IntegrationCallbackPort))
            {
                return new System.ServiceModel.EndpointAddress("https://your_url_here/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return IntegrationCallbackClient.GetBindingForEndpoint(EndpointConfiguration.IntegrationCallbackPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return IntegrationCallbackClient.GetEndpointAddress(EndpointConfiguration.IntegrationCallbackPort);
        }
        
        public enum EndpointConfiguration
        {
            
            IntegrationCallbackPort,
        }
    }
}
